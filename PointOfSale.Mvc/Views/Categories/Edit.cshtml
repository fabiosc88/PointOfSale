@model PointOfSale.Application.ViewModels.CategoryViewModel
@{
    ViewBag.Title = "Categories";
    ViewBag.Description = "Edit";
}

@using (Html.BeginForm("Edit", "Categories", FormMethod.Post, new { @role = "form", @ng_controller = "CategoriesController", @novalidate = "novalidate", @name = "categoryForm" }))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    <div class="field">
        @Html.LabelFor(m => m.Name, new { @class = "label" })
        <div class="control">
            @Html.EditorFor(m => m.Name, new
       {
           htmlAttributes = new
           {
               @class = "input",
               @required = "required",
               @ng_model = "category.Name",
               @ng_class = "{ 'is-danger': (categoryForm.Name.$touched && categoryForm.Name.$error.required), 'is-success': (categoryForm.Name.$touched && !categoryForm.Name.$error.required)}"
           }
       })
            <p ng-show="categoryForm.Name.$touched && categoryForm.Name.$error.required" class="help is-danger">Name field is required!</p>
        </div>
    </div>

    <span>{{teste}}</span>

    <div class="field is-grouped">
        <div class="control">
            <button ng-disabled="categoryForm.$invalid || categoryForm.$pristine" class="button is-primary">Submit</button>
        </div>
        <div class="control">
            <a class="button is-link" href="@Url.Action("Index")">Cancel</a>
        </div>
    </div>
}


@section scripts
{
    <script>
        var app = angular.module('pointOfSale');
        app.controller('CategoriesController', ['$scope', function ($scope) {
            $scope.category = {
                Name: `@Model.Name`
            };
        }]);
    </script>
}